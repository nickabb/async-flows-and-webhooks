version: '3.8'

services:
  adonis_app:
    container_name: adonis_app
    restart: always
    build:
      context: ./api/
      target: dependencies
    ports:
      - "3333:3333"
      - "9229:9229"
    env_file:
      - ./api/.env
    volumes:
      - ./api/:/home/node/app
      # Uncomment the below line if you developing on MacOS
      #- /home/node/app/node_modules
    command: dumb-init node ace serve --watch --node-args="--inspect=0.0.0.0"
  external_api:
    container_name: external_api
    restart: always
    build:
      context: ./external/
      target: dependencies
    ports:
      - "8080:8080"
    env_file:
      - ./external/.env
    volumes:
      - ./external/:/home/node/app
      # Uncomment the below line if you developing on MacOS
      #- /home/node/app/node_modules
    command: dumb-init node ace serve --watch --node-args="--inspect=0.0.0.0"
  postgres:
    container_name: postgres
    image: postgres:13
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./docker-config/postgres-dev-init.sql:/docker-entrypoint-initdb.d/init.sql

    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
    volumes:
      - 'ft-redis:/data'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s

volumes:
  postgres_volume: